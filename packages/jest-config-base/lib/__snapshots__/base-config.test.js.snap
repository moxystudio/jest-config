// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should match snapshot 1`] = `
Object {
  "automock": false,
  "bail": 0,
  "cache": true,
  "cacheDirectory": "<TEMP_DIR>/jest_1",
  "changedFilesWithAncestor": false,
  "clearMocks": false,
  "collectCoverage": false,
  "coveragePathIgnorePatterns": Array [
    "/node_modules/",
  ],
  "coverageProvider": "babel",
  "coverageReporters": Array [
    "json",
    "text",
    "lcov",
    "clover",
  ],
  "coverageThreshold": Object {
    "global": Object {
      "branches": 80,
      "functions": 80,
      "lines": 80,
      "statements": -10,
    },
  },
  "errorOnDeprecated": false,
  "expand": false,
  "forceCoverageMatch": Array [],
  "globals": Object {},
  "haste": Object {
    "computeSha1": false,
    "throwOnModuleCollision": false,
  },
  "injectGlobals": true,
  "maxConcurrency": 5,
  "maxWorkers": "50%",
  "moduleDirectories": Array [
    "node_modules",
  ],
  "moduleFileExtensions": Array [
    "js",
    "json",
    "jsx",
    "ts",
    "tsx",
    "node",
  ],
  "moduleNameMapper": Object {},
  "modulePathIgnorePatterns": Array [],
  "noStackTrace": false,
  "notify": false,
  "notifyMode": "failure-change",
  "prettierPath": "prettier",
  "resetMocks": false,
  "resetModules": false,
  "restoreMocks": false,
  "roots": Array [
    "<rootDir>",
  ],
  "runTestsByPath": false,
  "runner": "jest-runner",
  "setupFiles": Array [],
  "setupFilesAfterEnv": Array [],
  "skipFilter": false,
  "slowTestThreshold": 5,
  "snapshotSerializers": Array [
    "<PROJECT_ROOT>/node_modules/jest-serializer-path/lib/index.js",
  ],
  "testEnvironment": "jsdom",
  "testEnvironmentOptions": Object {},
  "testFailureExitCode": 1,
  "testLocationInResults": false,
  "testMatch": Array [
    "**/?(*.)test.[jt]s",
  ],
  "testPathIgnorePatterns": Array [
    "/node_modules/",
    "/docusaurus/",
  ],
  "testRegex": Array [],
  "testRunner": "jasmine2",
  "testSequencer": "@jest/test-sequencer",
  "testURL": "http://localhost",
  "timers": "real",
  "transform": Object {
    "/.(eot|ttf|woff|woff2|otf)$": "<PROJECT_ROOT>/packages/jest-config-base/lib/transforms/file.js",
    "/.(mp3|flac|wav|aac|ogg|oga|mp4|m4a|webm|ogv)$": "<PROJECT_ROOT>/packages/jest-config-base/lib/transforms/file.js",
    "/.(obj|mtl|fnt|gltf|glb)$": "<PROJECT_ROOT>/packages/jest-config-base/lib/transforms/file.js",
    "/.(png|jpg|jpeg|gif|webp|svg|ico|bmp)$": "<PROJECT_ROOT>/packages/jest-config-base/lib/transforms/file.js",
    "/.[jt]s$": "<PROJECT_ROOT>/node_modules/babel-jest/build/index.js",
    "/.data-url/.[^/.+?]$": "<PROJECT_ROOT>/packages/jest-config-base/lib/transforms/data-url.js",
    "/.inline/.[^/.+?]$": "<PROJECT_ROOT>/packages/jest-config-base/lib/transforms/inline.js",
    "/.json5$": "<PROJECT_ROOT>/packages/jest-config-base/lib/transforms/json5.js",
    "/.xml$": "<PROJECT_ROOT>/packages/jest-config-base/lib/transforms/xml-string.js",
  },
  "transformIgnorePatterns": Array [
    "/node_modules/",
    "/.pnp/.[^//]+$",
  ],
  "useStderr": false,
  "watch": false,
  "watchPathIgnorePatterns": Array [],
  "watchPlugins": Array [
    "jest-watch-typeahead/filename",
    "jest-watch-typeahead/testname",
  ],
  "watchman": true,
}
`;
